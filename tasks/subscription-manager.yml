# SPDX-License-Identifier: MIT
---
- name: Ensure required packages are installed
  package:
    name: "subscription-manager"
    state: present
  when: rhc_state | d('present') == "present"

- name: Change rhsm.baseurl
  command:
    argv:
      - subscription-manager
      - config
      - "--rhsm.baseurl={{ rhc_baseurl }}"
  changed_when: false
  when:
    - rhc_state | d("present") == "present"
    - rhc_baseurl | d("") | length > 0
    - rhc_baseurl is not none
    - rhc_baseurl != omit

- name: Call subscription-manager
  redhat_subscription:
    state: "{{ rhc_state | d('present') }}"
    username: "{{ rhc_auth.login.username | d(omit) }}"
    password: "{{ rhc_auth.login.password | d(omit) }}"
    activationkey: "{{ rhc_auth.activation_keys.keys | join(',')
      if ( rhc_auth.activation_keys.keys is defined ) else omit }}"
    org_id: "{{ rhc_organization | d(omit) }}"
    server_hostname: "{{ rhc_server.hostname | d(omit) }}"
    server_port: "{{ rhc_server.port | d(omit) }}"
    server_prefix: "{{ rhc_server.prefix | d(omit) }}"
    server_insecure: "{{ rhc_server.insecure | d(omit) }}"
    auto_attach: "{{ true
      if ( rhc_state | d('present') == 'present' ) else omit }}"

- name: Configure subscribed system
  when:
    - rhc_state | d("present") == "present"
  block:
    - name: Configure repositories
      rhsm_repository:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        purge: no
      loop: "{{ rhc_repositories }}"
      when:
        - ( rhc_repositories | d([]) ) | length > 0
